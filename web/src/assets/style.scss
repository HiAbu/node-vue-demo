/*reset*/
@import './variables';
* {
  box-sizing: border-box;
  outline: none;
}
html {
  font-size: 13px;
}
body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}

a {
  color: #999;
}

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}

/*text align*/
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

/*flex*/

.d-flex {
  display: flex;
}
//垂直方向布局
.flex-column {
  flex-direction: column;
}
//换行 flex布局一半都不换行，想让换行用wrap
.flex-wrap {
  flex-wrap: wrap;
}

@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key, $value in $flex-ai {
  .jc-#{$key} {
    align-items: $value;
  }
}

/*width 100 height 100*/
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}

//flex-grow  存在剩余空间，各个同级模块拉伸比例
//  flex-shrink 不足剩余空间，各个同级模块压缩比例
//   flex-basis 分配剩余空间之前，占据的主轴空间
//flex:  是flex-grow   flex-shrink flex-basis的简写
//auto 代表 1 1 auto ，none代表 0 0 auto。auto是根据内容来分配大小，1就是直接平均分配

//这里简写 shrink grow 都是1
// 这里跟grow1一样的，都是填充剩余空间
.flex-1 {
  flex: 1;
}
// 就是自动占满剩余空间
.flex-grow-1 {
  flex-grow: 1;
}

@each $typeKey, $type in $spacing-types {
  //.m-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }

  //.mx-1 .my-1 水平和垂直各自定义
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }

  //.mt-1
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      // .mt-1{margin-top:0.25rem}
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}

//text-overflow
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//button
.btn {
  border: none;
  border-radius: 0.153846rem;
  /*map-get就是在之前定义好的变量里取一个 取sm这个号*/
  font-size: map-get($font-sizes, 'sm') * $base-font-size;
  padding: 0.2rem 0.6rem;
}

//nav
.nav {
  //默认横向分布 分散对齐
  display: flex;
  .nav-item {
    /*加个透明边框有利于对齐。否则高低不统一容易对不齐*/
    border-bottom: solid 3px transparent;
    padding-bottom: 0.2rem;
    &.active {
      color: map-get($colors, 'primary');
      border-bottom-color: map-get($colors, 'primary');
    }
  }
  &.nav-inverse {
    .nav-item {
      color: map-get($colors, 'white');
      &.active {
        border-bottom-color: map-get($colors, 'white');
      }
    }
  }
}

// sprite  0 0表示左上角对齐  定位网站 spritecow
.sprite {
  background: url(../assets/images/index.png) no-repeat 0 0;
  background-size: 28.846154rem;
  display: inline-block; // 用精灵图片来做，一定要显示宽高，否则显示不出来
  &.sprite-news {
    width: 1.769231rem;
    height: 1.538462rem;
    background-position: 63.546% 15.157%;
  }

  &.sprite-arrow {
    width: 0.769231rem;
    height: 0.769231rem;
    background-position: 38.577% 52.076%;
  }
}
